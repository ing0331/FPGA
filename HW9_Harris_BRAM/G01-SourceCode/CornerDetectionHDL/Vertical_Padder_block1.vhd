-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\CornerDetectionHDL\Vertical_Padder_block1.vhd
-- Created: 2023-06-21 14:30:33
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Vertical_Padder_block1
-- Source Path: CornerDetectionHDL/HDL Corner Algorithm/Corner Detector/HarrisCore/HarrisFilterB/LineBuffer/Vertical 
-- Padde
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_Corner_Algorithm_pkg.ALL;

ENTITY Vertical_Padder_block1 IS
  PORT( dataVectorIn                      :   IN    vector_of_std_logic_vector20(0 TO 4);  -- sfix20 [5]
        verPadCount                       :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
        dataVectorOut                     :   OUT   vector_of_std_logic_vector20(0 TO 4)  -- sfix20 [5]
        );
END Vertical_Padder_block1;


ARCHITECTURE rtl OF Vertical_Padder_block1 IS

  -- Signals
  SIGNAL verPadCount_unsigned             : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL verSEL1                          : std_logic;
  SIGNAL dataVectorIn_0                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL verSEL2                          : std_logic;
  SIGNAL dataVectorIn_1                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL dataVectorIn_2                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL DataLineOut2                     : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL DataLineOut1                     : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL verSEL4                          : std_logic;
  SIGNAL dataVectorIn_3                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL DataLineOut4                     : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL verSEL5                          : std_logic;
  SIGNAL dataVectorIn_4                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL DataLineOut5                     : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL dataVectorOut_tmp                : vector_of_signed20(0 TO 4);  -- sfix20 [5]

BEGIN
  verPadCount_unsigned <= unsigned(verPadCount);

  
  verSEL1 <= '1' WHEN verPadCount_unsigned > to_unsigned(16#002#, 11) ELSE
      '0';

  dataVectorIn_0 <= signed(dataVectorIn(0));

  
  verSEL2 <= '1' WHEN verPadCount_unsigned > to_unsigned(16#003#, 11) ELSE
      '0';

  dataVectorIn_1 <= signed(dataVectorIn(1));

  dataVectorIn_2 <= signed(dataVectorIn(2));

  
  DataLineOut2 <= dataVectorIn_1 WHEN verSEL2 = '0' ELSE
      dataVectorIn_2;

  
  DataLineOut1 <= dataVectorIn_0 WHEN verSEL1 = '0' ELSE
      DataLineOut2;

  
  verSEL4 <= '1' WHEN verPadCount_unsigned < to_unsigned(16#001#, 11) ELSE
      '0';

  dataVectorIn_3 <= signed(dataVectorIn(3));

  
  DataLineOut4 <= dataVectorIn_3 WHEN verSEL4 = '0' ELSE
      dataVectorIn_2;

  
  verSEL5 <= '1' WHEN verPadCount_unsigned < to_unsigned(16#002#, 11) ELSE
      '0';

  dataVectorIn_4 <= signed(dataVectorIn(4));

  
  DataLineOut5 <= dataVectorIn_4 WHEN verSEL5 = '0' ELSE
      DataLineOut4;

  dataVectorOut_tmp(0) <= DataLineOut1;
  dataVectorOut_tmp(1) <= DataLineOut2;
  dataVectorOut_tmp(2) <= signed(dataVectorIn(2));
  dataVectorOut_tmp(3) <= DataLineOut4;
  dataVectorOut_tmp(4) <= DataLineOut5;

  outputgen: FOR k IN 0 TO 4 GENERATE
    dataVectorOut(k) <= std_logic_vector(dataVectorOut_tmp(k));
  END GENERATE;

END rtl;

